version: "3.8"

services:
    opensearch-node1:
        image: opensearchproject/opensearch:3.1.0
        container_name: opensearch-node1
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node1
            - discovery.seed_hosts=opensearch-node1,opensearch-node2
            - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
            - bootstrap.memory_lock=false
            - DISABLE_SECURITY_PLUGIN=true
            - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
        ulimits:
            nofile: { soft: 65536, hard: 65536 }
        volumes:
            - opensearch-data1:/usr/share/opensearch/data
        ports:
            - "9200:9200"
            - "9600:9600"
        networks: [opensearch-net]

    opensearch-node2:
        image: opensearchproject/opensearch:3.1.0
        container_name: opensearch-node2
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node2
            - discovery.seed_hosts=opensearch-node1,opensearch-node2
            - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
            - bootstrap.memory_lock=false
            - DISABLE_SECURITY_PLUGIN=true
            - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
        ulimits:
            nofile: { soft: 65536, hard: 65536 }
        volumes:
            - opensearch-data2:/usr/share/opensearch/data
        networks: [opensearch-net]

    dashboards:
        image: opensearchproject/opensearch-dashboards:3.1.0
        container_name: dashboards
        environment:
            OPENSEARCH_HOSTS: '["http://opensearch-node1:9200","http://opensearch-node2:9200"]'
            DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
            OPENSEARCH_OBSERVABILITY_ENABLED: "true"
            data_source.enabled: true
        ports:
            - "5601:5601"
        networks: [opensearch-net]

    # jaeger-collector:
    #   image: jaegertracing/jaeger-collector:1.56
    #   container_name: jaeger-collector
    #   environment:
    #     - SPAN_STORAGE_TYPE=opensearch
    #     - ES_VERSION=7
    #     - ES_TAGS_AS_FIELDS_ALL=true
    #   command: [
    #     "--es.server-urls=http://opensearch-node1:9200,http://opensearch-node2:9200",
    #     "--es.version=7",
    #     "--collector.otlp.enabled=true"
    #   ]
    #   ports:
    #     - "14250:14250"
    #     - "14268:14268"
    #     - "4318:4318"
    #   networks: [opensearch-net]
    #   depends_on:
    #     - opensearch-node1

    # jaeger-query:
    #   image: jaegertracing/jaeger-query:1.56
    #   container_name: jaeger-query
    #   environment:
    #     - SPAN_STORAGE_TYPE=opensearch
    #     - ES_VERSION=7
    #   command: ["--es.server-urls=http://opensearch-node1:9200,http://opensearch-node2:9200",
    #     "--es.version=7"
    #   ]
    #   ports:
    #     - "16686:16686"
    #   networks: [opensearch-net]
    #   depends_on:
    #     - opensearch-node1

    # jaeger-agent:
    #   image: jaegertracing/jaeger-agent:1.56
    #   hostname: jaeger-agent
    #   command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
    #   ports:
    #     - "6831:6831/udp"
    #     - "6832:6832/udp"
    #   networks: [opensearch-net]
    #   depends_on:
    #     - jaeger-collector

    jaeger:
        image: quay.io/jaegertracing/all-in-one:1.56
        container_name: jaeger
        environment:
            - SPAN_STORAGE_TYPE=opensearch
            - ES_TAGS_AS_FIELDS_ALL=true
            - OTEL_TRACES_SAMPLER=always_off
        command:
            [
                "--collector.otlp.enabled=true",
                "--es.server-urls=http://opensearch-node1:9200,http://opensearch-node2:9200",
                "--es.version=7",
            ]
        ports:
            - "16686:16686"
            - "4317:4317"
            - "4318:4318"
            - "14250:14250"
            - "14268:14268"
            - "6831:6831/udp"
            - "6832:6832/udp"
        networks: [opensearch-net]

    zookeeper:
        image: confluentinc/cp-zookeeper:7.6.1
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks: [opensearch-net]

    kafka:
        image: confluentinc/cp-kafka:7.6.1
        container_name: kafka
        depends_on: [zookeeper]
        ports: ["9092:9092"]
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        networks: [opensearch-net]

    # ───────────────────────────── 추가: Sigma Router ─────────────────────────────
    sigma-router:
        # NOTE: ./sigma-router 폴더에 Dockerfile + main.go가 있어야 build됨
        build:
            context: ./sigma_matcher
            dockerfile: Dockerfile
        image: sigma-router:local
        container_name: sigma-router
        command: [
                # "/app/sigma_router",
                "-listen",
                ":55680",
                "-forward",
                "otelcol:4320",
                # "-tmptrace",
                # "otelcol:4321",
                "-rules",
                "rules/rules/windows",
                "-v",
            ]
        volumes:
            - ./sigma_matcher/rules:/app/rules:ro
        networks: [opensearch-net]
        restart: unless-stopped

    # ───────────────────────────── 추가: OTEL Collector ──────────────────────────
    otelcol:
        image: otel/opentelemetry-collector-contrib:0.133.0
        container_name: otelcol
        command: ["--config", "/etc/otelcol-contrib/config.yaml"]
        volumes:
            - ./OTEL/otelcol-contrib/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml:ro
            - ./event:/event
        ports:
            # 외부 에이전트 유입(ingest): 필요 시만 보안그룹 오픈
            - "4319:4319"
            # postrouter(4320), tmptrace(4321)는 내부 통신만 사용 → 공개 불필요
        networks: [opensearch-net]
        restart: unless-stopped
        depends_on:
            - kafka
            - sigma-router
            - jaeger

volumes:
    opensearch-data1:
    opensearch-data2:

networks:
    opensearch-net:
