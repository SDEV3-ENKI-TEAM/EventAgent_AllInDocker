version: "3.8"

services:
    opensearch-node1:
        image: opensearchproject/opensearch:3.1.0
        container_name: opensearch-node1
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node1
            - discovery.seed_hosts=opensearch-node1,opensearch-node2
            - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
            - bootstrap.memory_lock=false
            - DISABLE_SECURITY_PLUGIN=true
            - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
        ulimits:
            nofile: { soft: 65536, hard: 65536 }
        volumes:
            - opensearch-data1:/usr/share/opensearch/data
        # 외부 노출 불필요하면 포트 매핑 제거(필요 시 임시로 열기)
        # ports:
        #   - "9200:9200"
        #   - "9600:9600"
        networks: [opensearch-net]
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -qO- http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=60s || exit 1",
                ]
            interval: 20s
            timeout: 10s
            retries: 10

    opensearch-node2:
        image: opensearchproject/opensearch:3.1.0
        container_name: opensearch-node2
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node2
            - discovery.seed_hosts=opensearch-node1,opensearch-node2
            - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
            - bootstrap.memory_lock=false
            - DISABLE_SECURITY_PLUGIN=true
            - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
        ulimits:
            nofile: { soft: 65536, hard: 65536 }
        volumes:
            - opensearch-data2:/usr/share/opensearch/data
        networks: [opensearch-net]
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -qO- http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=60s || exit 1",
                ]
            interval: 20s
            timeout: 10s
            retries: 10

    dashboards:
        image: opensearchproject/opensearch-dashboards:3.1.0
        container_name: dashboards
        environment:
            OPENSEARCH_HOSTS: '["http://opensearch-node1:9200","http://opensearch-node2:9200"]'
            DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
            OPENSEARCH_OBSERVABILITY_ENABLED: "true"
            "data_source.enabled": "true" # ← 문자열로 수정
        # 필요 시에만 UI 공개
        # ports:
        #   - "5601:5601"
        networks: [opensearch-net]

    jaeger:
        image: quay.io/jaegertracing/all-in-one:1.56
        container_name: jaeger
        environment:
            - SPAN_STORAGE_TYPE=opensearch
            - ES_TAGS_AS_FIELDS_ALL=true
            - OTEL_TRACES_SAMPLER=always_off
        command:
            - "--collector.otlp.enabled=true"
            - "--es.server-urls=http://opensearch-node1:9200,http://opensearch-node2:9200"
            - "--es.version=7"
        # 필요 시에만 UI(16686) 잠깐 열기
        ports:
            - "16686:16686"
        networks: [opensearch-net]
        depends_on:
            opensearch-node1:
                condition: service_healthy
            opensearch-node2:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -qO- http://localhost:16686 || curl -fsS http://localhost:16686 || exit 1",
                ]
            interval: 20s
            timeout: 5s
            retries: 15
        restart: unless-stopped

    zookeeper:
        image: confluentinc/cp-zookeeper:7.6.1
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks: [opensearch-net]

    kafka:
        image: confluentinc/cp-kafka:7.6.1
        container_name: kafka
        depends_on: [zookeeper]
        # 외부 공개는 19092 하나만
        ports:
            - "19092:19092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            # 내부(컨테이너 간) 29092 / 외부(다른 EC2) 19092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:19092
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://${PRIVATE_IP}:19092
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        networks: [opensearch-net]

    sigma-router:
        build:
            context: ./sigma_matcher
            dockerfile: Dockerfile
        image: sigma-router:local
        container_name: sigma-router
        command:
            - "-listen"
            - ":55680"
            - "-forward"
            - "otelcol:4320"
            - "-tmptrace"
            - "otelcol:4321"
            - "-rules"
            - "rules/rules/windows"
            - "-v"
        volumes:
            - ./sigma_matcher/rules:/app/rules:ro
        networks: [opensearch-net]
        restart: unless-stopped

    otelcol:
        image: otel/opentelemetry-collector-contrib:0.133.0
        container_name: otelcol
        command: ["--config", "/etc/otelcol-contrib/config.yaml"]
        volumes:
            - ./OTEL/otelcol-contrib/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml:ro
            - ./event:/event
        ports:
            - "4319:4319" # 외부 Agent 유일 수신 포트
        networks: [opensearch-net]
        restart: unless-stopped
        depends_on:
            - kafka
            - sigma-router
            - jaeger

volumes:
    opensearch-data1:
    opensearch-data2:

networks:
    opensearch-net:
